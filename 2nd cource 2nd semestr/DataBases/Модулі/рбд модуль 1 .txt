1.	Етапи нормалізації моделі даних 
Нормалізація схеми бази даних - це процес розбиття одного відношення (або таблиці) на декілька відношень відповідно до алгоритму нормалізації. Нормальні форми визначаються як сукупність вимог, яким має задовольняти відношення. Це допомагає уникнути дублікації даних та забезпечити ефективність бази даних.
Якщо відношення відповідає критеріям нормальної форми n та всіх попередніх нормальних форм, то вважається, що це відношення знаходиться у нормальній формі рівня n.

Перша форма - утворює ґрунт для структурованої схеми бази даних:
- Кожна таблиця повинна мати основний ключ: мінімальний набір колонок, які ідентифікують запис.
- Уникнення повторень груп правильно визначаючи неключові атрибути.
- Атомарність: кожен атрибут повинен мати лише одне значення, а не множину значень.
Друга форма - вимагає, аби дані, що зберігаються в таблицях із композитним ключем, не залежали лише від частини ключа. Дані, що повторно з'являються в декількох рядках, виносяться в окремі таблиці.
Третя форма - вимагає, аби дані в таблиці залежали винятково від основного ключа. Будь-яке поле, що залежить від основного ключа та від будь-якого іншого поля, має виноситись в окрему таблицю.
Четверта форма: потребує, аби в схемі баз даних не було нетривіальних багатозначних залежностей множин атрибутів від будь чого, окрім надмножини ключа-кандидата. Також усуває небажані структури даних — багатозначні залежності.
П'ята форма вимагає, аби не було нетривіальних залежностей об'єднання, котрі б не витікали із обмежень ключів.
Шоста нормальна форма має задовольняти вимогу відсутності нетривіальних залежностей.

2.	Логічна модель даних та її особливості
ЛМД включає відношення, атрибути та зв’язки між ними. Відношення відповідають сутностям, а атрибути - їх властивостям. Зв’язки можуть бути “1:1” (один до одного) або “1:N” (один до багатьох).
ЛМД не допускає використання зв’язків “N:M”.
Процес проєктування включає нормалізацію відношень до певного рівня (принаймні третього). Мета - уникнення повторення даних. Первинні та зовнішні ключі допомагають реалізувати зв’язки між відношеннями.
ФМД включає таблиці та стовпчики, відповідні відношенням та атрибутам.

3.	Типи даних та їх використання у базах даних
основні типи даних в MySQL та їх короткий опис:
А) Текстові типи:
    - CHAR: Містить рядок фіксованої довжини (до 255 символів).
    - VARCHAR: Містить рядок змінної довжини (до 255 символів).
    - TINYTEXT: Рядок з найбільшою довжиною 255 символів.
    - TEXT: Зберігає рядок з найдовшою довжиною 65,535 символів.
    - MEDIUMTEXT: Зберігає рядок з максимальною довжиною в 16,777,215 символів.
    - LONGTEXT: Рядок з найбільшою довжиною в 4,294,967,295 символів.
Б) Числові типи:
    - TINYINT: Ціле число від -128 до 127 (або від 0 до 255 UNSIGNED).
    - SMALLINT: Ціле число від -32768 до 32767 (або від 0 до 65535 UNSIGNED).
    - MEDIUMINT: Ціле число від -8388608 до 8388607 (або від 0 до 16777215 UNSIGNED).
    - INT: Ціле число від -2147483648 до 2147483647 (або від 0 до 4294967295 UNSIGNED).
    - BIGINT: Ціле число від -9223372036854775808 до 9223372036854775807 (або від 0 до 18446744073709551615 UNSIGNED).
    - FLOAT: Число з плаваючою крапкою.
    - DOUBLE: Точніше число з плаваючою крапкою.
    - DECIMAL: DOUBLE, що зберігається як рядок з фіксованою крапкою.
В) Типи дати і часу:
    - DATE: Дата у форматі YYYY-MM-DD.
    - DATETIME: Дата та час у форматі YYYY-MM-DD HH:MM:SS.
    - TIMESTAMP: Кількість секунд з початку епохи Unix ('1970-01-01 00:00:00' UTC).

4.	Екземпляри сутностей та їх реалізація у реляційних моделях даних
- Сутність: Це об'єкт або поняття, яке ми хочемо включити до бази даних. 
- Атрибут: Це властивість сутності. 
- Ключ: Це унікальний ідентифікатор сутності. 
- Зв'язок: Це відношення між сутностями. 
- Первинний ключ (Primary Key): Це унікальний ідентифікатор для конкретного екземпляра сутності.
- Зовнішній ключ (Foreign Key): Це поле, яке посилається на первинний ключ іншої таблиці. Використовується для встановлення зв'язку між таблицями.
- Таблиця: Це структура даних, яка містить рядки (екземпляри сутностей) та стовпці (атрибути).
- Нормалізація: Процес розбиття таблиць на менші, більш узагальнені таблиці для зменшення дублікації даних та покращення ефективності.
- Денормалізація: Процес об'єднання таблиць для покращення продуктивності запитів, але з можливістю дублікації даних.
- Індекси: Структури даних, які прискорюють пошук і сортування в таблицях.

5.	Перша нормальна форма
Відношення буде зведено до першої нормальної форми (1НФ), коли всі його атрибути містять тільки неподільні (атомарні) значення й у ньому відсутні групи атрибутів з однаковими за змістом значеннями, які повторюються у межах одного кортежу. Неподільність значення атрибута говорить про те, що його не можна розбити на більш дрібні частини.

6.	Цілісність посилань та її підтримка у реляційних базах даних
А) Зовнішні ключі (Foreign Keys). Зовнішні ключі встановлюють зв’язок між таблицями. Вони вказують на стовпці, які посилаються на інші таблиці.
Б) Обмеження цілісності (Integrity Constraints). Обмеження цілісності гарантують правильність даних.
В) Оновлення та видалення. При оновленні або видаленні даних зовнішні ключі важливо враховувати, щоб уникнути некоректних даних.
Г) Транзакції. Забезпечують цілісність даних. Транзакції дозволяють виконувати групу операцій як єдину одиницю роботи. Якщо виникає помилка, транзакцію можна повернути, щоб уникнути некоректних даних.

7.	Рефакторинг таблиць баз даних
Це процес внесення змін у схему бази даних з метою поліпшення її проекту при збереженні функціональності та інформаційної семантики. Виділяють:
- Рефакторинг структури
- Рефакторинг якості даних (покращення якості збережених в базі даних даних)
- Рефакторинг цілісності посилань
- Рефакторинг архітектури (покращення взаємодії зовнішніх програм з БД)
Рефакторинг допомагає зберегати базу даних актуальною та ефективною
8.	Четверта нормальна форма
Є наступним рівнем нормалізації після нормальної форми Бойса-Кодда. Спрямована на усунення многозначних залежностей. Це означає, що в схемі бази даних не повинно бути нетривіальних зв’язків між множиною атрибутів та будь-чим, крім надмножини ключа-кандидата.
Наприклад, якщо стовпець з первинним ключем має зв’язок один-до-багатьох з іншим стовпцем, який не є ключем, то ця нормальна форма допоможе усунути такі некоректні залежності.\

9.	Операції над множинами, що застосовуються у реляційних моделях даних
Основні операції над відношеннями в реляційних моделях даних включають:
- Об’єднання: Повертає всі унікальні кортежі, які з’являються в обох відношеннях.
- Перетин: Повертає всі спільні кортежі, які з’являються в обох відношеннях.
- Різниця: Повертає кортежі, які з’являються в одному відношенні, але не в іншому.
- Декартів добуток: Повертає всі можливі комбінації кортежів з обох відношень.

10.	Етапи денормалізації відношень
Денормалізація в базах даних — це процес збільшення зв’язності між таблицями, щоб покращити продуктивність запитів. Виділяють кілька етапів денормалізації:
- Об’єднання таблиць, які мають спільний ключ, для зменшення кількості з’єднань.
- Додавання додаткових стовпчиків до таблиць, щоб уникнути з’єднань.
- Збереження агрегованих даних: замість обчислення агрегованих даних від час виконання, зберігати їх у таблицях.
- Дублювання деяких даних, щоб зменшити кількість з’єднань.

11.	Сурогатний ключ та особливості його використання
у базах даних є унікальним ідентифікатором для об’єктів модельованого світу чи об’єктів бази даних. Особливості:
- Сурогатний ключ не залежить від даних застосунку і залишається сталим навіть при зміні вмісту таблиці.
- Якщо вимоги до даних змінюються, сурогатний ключ залишається незмінним, що полегшує роботу з базою даних.
- Сурогатні ключі часто є послідовними числами, що сприяє ефективній індексації та оптимізації запитів.
- Дозволяють легко об’єднувати дані з різних таблиць.
- Мають однаковий формат, що спрощує роботу з ними.
- не містять семантичного змісту, що дозволяє їх легко перевіряти.
Недоліки сурогатних ключів включають дизасоціацію від реальності, можливість випадкового розкриття та випадкових припущень. Однак, в багатьох випадках вони є корисним інструментом для унікальної ідентифікації даних в базах даних.

12.	Зв’язки між батьківським та дочірнім відношеннями
Зв’язки між батьківським та дочірнім відношеннями в базах даних визначаються за допомогою зовнішніх ключів. Ці ключі забезпечують зв’язок між полями двох або більше таблиць, які мають спільні дані. Існує три види зв’язків між таблицями:
Один до одного: Кожен запис в одній таблиці пов’язаний з одним записом в іншій таблиці.
Один до багатьох: Кожен запис в одній таблиці пов’язаний з багатьма записами в іншій таблиці.
Багато до багатьох: Кожен запис в одній таблиці може бути пов’язаний з багатьма записами в іншій таблиці, і навпаки.
Ці зв’язки допомагають управляти даними, забезпечуючи цілісність та зв’язність між різними сутностями в базі даних.















